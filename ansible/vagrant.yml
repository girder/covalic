---
- hosts: all

  vars:
    girder_admin_username: "girder"
    girder_admin_password: "girder"
    girder_virtualenv: "{{ ansible_user_dir }}/.venvs/girder"

  pre_tasks:
    - name: Install python prereqs
      apt:
        name:
          - python3-dev
          # This is necessary to install for girder-client. When using ansible_local
          # the provisioner runs via Python2, so python2-pip is necessary for installing
          # girder-client in a way that the ansible module can be used.
          - python-pip
          - python3-pip
          - python3-venv
      become: true

      # Since we want to use the girder module, girder-client is effectively
      # a system-wide dependency.
    - name: Install girder-client
      pip:
        name: girder-client
        executable: /usr/bin/pip2
      become: true

    - name: Create virtualenv
      command: |
        /usr/bin/python3.6 -m venv "{{ girder_virtualenv }}"
      args:
        creates: "{{ girder_virtualenv }}"

    - name: Install pip deps
      pip:
        name: wheel
        virtualenv: "{{ girder_virtualenv }}"

  roles:
    - mongodb
    - role: girder
    - covalic
    - role: girder-worker
      girder_worker_virtualenv: "{{ girder_virtualenv }}"
    - role: docker
      become: true

  post_tasks:
    - name: Install challenge submission plugin
      pip:
        name: "git+https://github.com/ImageMarkup/isic_challenge_submission@girder3"
        virtualenv: "{{ girder_virtualenv }}"

    - name: Install the prerelease of girder worker
      pip:
        name: girder-worker
        extra_args: "--pre --upgrade"
        virtualenv: "{{ girder_virtualenv }}"

    - name: Configure Girder to bind to public interface
      ini_file:
        dest: "{{ ansible_user_dir }}/.girder/girder.cfg"
        section: "global"
        option: "server.socket_host"
        value: '"0.0.0.0"'
      notify: Restart Girder

    - name: Wait for Girder to be responsive
      wait_for:
        port: 8080
        delay: 5

    - name: Create admin user
      girder:
        user:
          firstName: "Provision"
          lastName: "Admin"
          login: "{{ girder_admin_username }}"
          password: "{{ girder_admin_password }}"
          email: "provision.admin@isic-archive.com"
          admin: yes
        state: present

    - name: Create assetstore
      girder:
        username: "{{ girder_admin_username }}"
        password: "{{ girder_admin_password }}"
        assetstore:
          name: "Default"
          type: "filesystem"
          root: "{{ ansible_user_dir }}/assetstore"
          current: true
        state: present
